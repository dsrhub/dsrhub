// Code generated by protoc-gen-go. DO NOT EDIT.
// source: opendsr/opendsr.proto

package opendsr // import "github.com/dsrhub/dsrhub/proto/dsrhub/opendsr"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Identity struct {
	IdentityType         string   `protobuf:"bytes,1,opt,name=identity_type,json=identityType" json:"identity_type,omitempty"`
	IdentityFormat       string   `protobuf:"bytes,2,opt,name=identity_format,json=identityFormat" json:"identity_format,omitempty"`
	IdentityValue        string   `protobuf:"bytes,3,opt,name=identity_value,json=identityValue" json:"identity_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Identity) Reset()         { *m = Identity{} }
func (m *Identity) String() string { return proto.CompactTextString(m) }
func (*Identity) ProtoMessage()    {}
func (*Identity) Descriptor() ([]byte, []int) {
	return fileDescriptor_opendsr_d32d6a998d4a7b8f, []int{0}
}
func (m *Identity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Identity.Unmarshal(m, b)
}
func (m *Identity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Identity.Marshal(b, m, deterministic)
}
func (dst *Identity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Identity.Merge(dst, src)
}
func (m *Identity) XXX_Size() int {
	return xxx_messageInfo_Identity.Size(m)
}
func (m *Identity) XXX_DiscardUnknown() {
	xxx_messageInfo_Identity.DiscardUnknown(m)
}

var xxx_messageInfo_Identity proto.InternalMessageInfo

func (m *Identity) GetIdentityType() string {
	if m != nil {
		return m.IdentityType
	}
	return ""
}

func (m *Identity) GetIdentityFormat() string {
	if m != nil {
		return m.IdentityFormat
	}
	return ""
}

func (m *Identity) GetIdentityValue() string {
	if m != nil {
		return m.IdentityValue
	}
	return ""
}

type GetDiscoveryRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDiscoveryRequest) Reset()         { *m = GetDiscoveryRequest{} }
func (m *GetDiscoveryRequest) String() string { return proto.CompactTextString(m) }
func (*GetDiscoveryRequest) ProtoMessage()    {}
func (*GetDiscoveryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_opendsr_d32d6a998d4a7b8f, []int{1}
}
func (m *GetDiscoveryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDiscoveryRequest.Unmarshal(m, b)
}
func (m *GetDiscoveryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDiscoveryRequest.Marshal(b, m, deterministic)
}
func (dst *GetDiscoveryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDiscoveryRequest.Merge(dst, src)
}
func (m *GetDiscoveryRequest) XXX_Size() int {
	return xxx_messageInfo_GetDiscoveryRequest.Size(m)
}
func (m *GetDiscoveryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDiscoveryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDiscoveryRequest proto.InternalMessageInfo

type GetDiscoveryResponse struct {
	ApiVersion                   string      `protobuf:"bytes,1,opt,name=api_version,json=apiVersion" json:"api_version,omitempty"`
	SupportedIdentities          []*Identity `protobuf:"bytes,2,rep,name=supported_identities,json=supportedIdentities" json:"supported_identities,omitempty"`
	SupportedSubjectRequestTypes string      `protobuf:"bytes,3,opt,name=supported_subject_request_types,json=supportedSubjectRequestTypes" json:"supported_subject_request_types,omitempty"`
	XXX_NoUnkeyedLiteral         struct{}    `json:"-"`
	XXX_unrecognized             []byte      `json:"-"`
	XXX_sizecache                int32       `json:"-"`
}

func (m *GetDiscoveryResponse) Reset()         { *m = GetDiscoveryResponse{} }
func (m *GetDiscoveryResponse) String() string { return proto.CompactTextString(m) }
func (*GetDiscoveryResponse) ProtoMessage()    {}
func (*GetDiscoveryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_opendsr_d32d6a998d4a7b8f, []int{2}
}
func (m *GetDiscoveryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDiscoveryResponse.Unmarshal(m, b)
}
func (m *GetDiscoveryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDiscoveryResponse.Marshal(b, m, deterministic)
}
func (dst *GetDiscoveryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDiscoveryResponse.Merge(dst, src)
}
func (m *GetDiscoveryResponse) XXX_Size() int {
	return xxx_messageInfo_GetDiscoveryResponse.Size(m)
}
func (m *GetDiscoveryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDiscoveryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDiscoveryResponse proto.InternalMessageInfo

func (m *GetDiscoveryResponse) GetApiVersion() string {
	if m != nil {
		return m.ApiVersion
	}
	return ""
}

func (m *GetDiscoveryResponse) GetSupportedIdentities() []*Identity {
	if m != nil {
		return m.SupportedIdentities
	}
	return nil
}

func (m *GetDiscoveryResponse) GetSupportedSubjectRequestTypes() string {
	if m != nil {
		return m.SupportedSubjectRequestTypes
	}
	return ""
}

type CreateDSRRequest struct {
	ApiVersion           string      `protobuf:"bytes,1,opt,name=api_version,json=apiVersion" json:"api_version,omitempty"`
	Regulation           string      `protobuf:"bytes,2,opt,name=regulation" json:"regulation,omitempty"`
	SubjectRequestId     string      `protobuf:"bytes,3,opt,name=subject_request_id,json=subjectRequestId" json:"subject_request_id,omitempty"`
	SubjectRequestType   string      `protobuf:"bytes,4,opt,name=subject_request_type,json=subjectRequestType" json:"subject_request_type,omitempty"`
	SubmittedTime        string      `protobuf:"bytes,5,opt,name=submitted_time,json=submittedTime" json:"submitted_time,omitempty"`
	SubjectIdentities    []*Identity `protobuf:"bytes,6,rep,name=subject_identities,json=subjectIdentities" json:"subject_identities,omitempty"`
	StatusCallbackUrls   []string    `protobuf:"bytes,7,rep,name=status_callback_urls,json=statusCallbackUrls" json:"status_callback_urls,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *CreateDSRRequest) Reset()         { *m = CreateDSRRequest{} }
func (m *CreateDSRRequest) String() string { return proto.CompactTextString(m) }
func (*CreateDSRRequest) ProtoMessage()    {}
func (*CreateDSRRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_opendsr_d32d6a998d4a7b8f, []int{3}
}
func (m *CreateDSRRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateDSRRequest.Unmarshal(m, b)
}
func (m *CreateDSRRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateDSRRequest.Marshal(b, m, deterministic)
}
func (dst *CreateDSRRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateDSRRequest.Merge(dst, src)
}
func (m *CreateDSRRequest) XXX_Size() int {
	return xxx_messageInfo_CreateDSRRequest.Size(m)
}
func (m *CreateDSRRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateDSRRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateDSRRequest proto.InternalMessageInfo

func (m *CreateDSRRequest) GetApiVersion() string {
	if m != nil {
		return m.ApiVersion
	}
	return ""
}

func (m *CreateDSRRequest) GetRegulation() string {
	if m != nil {
		return m.Regulation
	}
	return ""
}

func (m *CreateDSRRequest) GetSubjectRequestId() string {
	if m != nil {
		return m.SubjectRequestId
	}
	return ""
}

func (m *CreateDSRRequest) GetSubjectRequestType() string {
	if m != nil {
		return m.SubjectRequestType
	}
	return ""
}

func (m *CreateDSRRequest) GetSubmittedTime() string {
	if m != nil {
		return m.SubmittedTime
	}
	return ""
}

func (m *CreateDSRRequest) GetSubjectIdentities() []*Identity {
	if m != nil {
		return m.SubjectIdentities
	}
	return nil
}

func (m *CreateDSRRequest) GetStatusCallbackUrls() []string {
	if m != nil {
		return m.StatusCallbackUrls
	}
	return nil
}

type CreateDSRResponse struct {
	ApiVersion             string   `protobuf:"bytes,1,opt,name=api_version,json=apiVersion" json:"api_version,omitempty"`
	ControllerId           string   `protobuf:"bytes,2,opt,name=controller_id,json=controllerId" json:"controller_id,omitempty"`
	ExpectedCompletionTime string   `protobuf:"bytes,3,opt,name=expected_completion_time,json=expectedCompletionTime" json:"expected_completion_time,omitempty"`
	ReceivedTime           string   `protobuf:"bytes,4,opt,name=received_time,json=receivedTime" json:"received_time,omitempty"`
	EncodedRequest         string   `protobuf:"bytes,5,opt,name=encoded_request,json=encodedRequest" json:"encoded_request,omitempty"`
	SubjectRequestId       string   `protobuf:"bytes,6,opt,name=subject_request_id,json=subjectRequestId" json:"subject_request_id,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *CreateDSRResponse) Reset()         { *m = CreateDSRResponse{} }
func (m *CreateDSRResponse) String() string { return proto.CompactTextString(m) }
func (*CreateDSRResponse) ProtoMessage()    {}
func (*CreateDSRResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_opendsr_d32d6a998d4a7b8f, []int{4}
}
func (m *CreateDSRResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateDSRResponse.Unmarshal(m, b)
}
func (m *CreateDSRResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateDSRResponse.Marshal(b, m, deterministic)
}
func (dst *CreateDSRResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateDSRResponse.Merge(dst, src)
}
func (m *CreateDSRResponse) XXX_Size() int {
	return xxx_messageInfo_CreateDSRResponse.Size(m)
}
func (m *CreateDSRResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateDSRResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateDSRResponse proto.InternalMessageInfo

func (m *CreateDSRResponse) GetApiVersion() string {
	if m != nil {
		return m.ApiVersion
	}
	return ""
}

func (m *CreateDSRResponse) GetControllerId() string {
	if m != nil {
		return m.ControllerId
	}
	return ""
}

func (m *CreateDSRResponse) GetExpectedCompletionTime() string {
	if m != nil {
		return m.ExpectedCompletionTime
	}
	return ""
}

func (m *CreateDSRResponse) GetReceivedTime() string {
	if m != nil {
		return m.ReceivedTime
	}
	return ""
}

func (m *CreateDSRResponse) GetEncodedRequest() string {
	if m != nil {
		return m.EncodedRequest
	}
	return ""
}

func (m *CreateDSRResponse) GetSubjectRequestId() string {
	if m != nil {
		return m.SubjectRequestId
	}
	return ""
}

type GetDSRRequest struct {
	ApiVersion           string   `protobuf:"bytes,1,opt,name=api_version,json=apiVersion" json:"api_version,omitempty"`
	SubjectRequestId     string   `protobuf:"bytes,2,opt,name=subject_request_id,json=subjectRequestId" json:"subject_request_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDSRRequest) Reset()         { *m = GetDSRRequest{} }
func (m *GetDSRRequest) String() string { return proto.CompactTextString(m) }
func (*GetDSRRequest) ProtoMessage()    {}
func (*GetDSRRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_opendsr_d32d6a998d4a7b8f, []int{5}
}
func (m *GetDSRRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDSRRequest.Unmarshal(m, b)
}
func (m *GetDSRRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDSRRequest.Marshal(b, m, deterministic)
}
func (dst *GetDSRRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDSRRequest.Merge(dst, src)
}
func (m *GetDSRRequest) XXX_Size() int {
	return xxx_messageInfo_GetDSRRequest.Size(m)
}
func (m *GetDSRRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDSRRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDSRRequest proto.InternalMessageInfo

func (m *GetDSRRequest) GetApiVersion() string {
	if m != nil {
		return m.ApiVersion
	}
	return ""
}

func (m *GetDSRRequest) GetSubjectRequestId() string {
	if m != nil {
		return m.SubjectRequestId
	}
	return ""
}

type GetDSRResponse struct {
	ApiVersion             string   `protobuf:"bytes,1,opt,name=api_version,json=apiVersion" json:"api_version,omitempty"`
	ControllerId           string   `protobuf:"bytes,2,opt,name=controller_id,json=controllerId" json:"controller_id,omitempty"`
	ExpectedCompletionTime string   `protobuf:"bytes,3,opt,name=expected_completion_time,json=expectedCompletionTime" json:"expected_completion_time,omitempty"`
	SubjectRequestId       string   `protobuf:"bytes,4,opt,name=subject_request_id,json=subjectRequestId" json:"subject_request_id,omitempty"`
	RequestStatus          string   `protobuf:"bytes,5,opt,name=request_status,json=requestStatus" json:"request_status,omitempty"`
	ResultsUrl             string   `protobuf:"bytes,6,opt,name=results_url,json=resultsUrl" json:"results_url,omitempty"`
	ResultsCount           string   `protobuf:"bytes,7,opt,name=results_count,json=resultsCount" json:"results_count,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *GetDSRResponse) Reset()         { *m = GetDSRResponse{} }
func (m *GetDSRResponse) String() string { return proto.CompactTextString(m) }
func (*GetDSRResponse) ProtoMessage()    {}
func (*GetDSRResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_opendsr_d32d6a998d4a7b8f, []int{6}
}
func (m *GetDSRResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDSRResponse.Unmarshal(m, b)
}
func (m *GetDSRResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDSRResponse.Marshal(b, m, deterministic)
}
func (dst *GetDSRResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDSRResponse.Merge(dst, src)
}
func (m *GetDSRResponse) XXX_Size() int {
	return xxx_messageInfo_GetDSRResponse.Size(m)
}
func (m *GetDSRResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDSRResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDSRResponse proto.InternalMessageInfo

func (m *GetDSRResponse) GetApiVersion() string {
	if m != nil {
		return m.ApiVersion
	}
	return ""
}

func (m *GetDSRResponse) GetControllerId() string {
	if m != nil {
		return m.ControllerId
	}
	return ""
}

func (m *GetDSRResponse) GetExpectedCompletionTime() string {
	if m != nil {
		return m.ExpectedCompletionTime
	}
	return ""
}

func (m *GetDSRResponse) GetSubjectRequestId() string {
	if m != nil {
		return m.SubjectRequestId
	}
	return ""
}

func (m *GetDSRResponse) GetRequestStatus() string {
	if m != nil {
		return m.RequestStatus
	}
	return ""
}

func (m *GetDSRResponse) GetResultsUrl() string {
	if m != nil {
		return m.ResultsUrl
	}
	return ""
}

func (m *GetDSRResponse) GetResultsCount() string {
	if m != nil {
		return m.ResultsCount
	}
	return ""
}

type CancelDSRRequest struct {
	ApiVersion           string   `protobuf:"bytes,1,opt,name=api_version,json=apiVersion" json:"api_version,omitempty"`
	SubjectRequestId     string   `protobuf:"bytes,2,opt,name=subject_request_id,json=subjectRequestId" json:"subject_request_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CancelDSRRequest) Reset()         { *m = CancelDSRRequest{} }
func (m *CancelDSRRequest) String() string { return proto.CompactTextString(m) }
func (*CancelDSRRequest) ProtoMessage()    {}
func (*CancelDSRRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_opendsr_d32d6a998d4a7b8f, []int{7}
}
func (m *CancelDSRRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CancelDSRRequest.Unmarshal(m, b)
}
func (m *CancelDSRRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CancelDSRRequest.Marshal(b, m, deterministic)
}
func (dst *CancelDSRRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelDSRRequest.Merge(dst, src)
}
func (m *CancelDSRRequest) XXX_Size() int {
	return xxx_messageInfo_CancelDSRRequest.Size(m)
}
func (m *CancelDSRRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelDSRRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CancelDSRRequest proto.InternalMessageInfo

func (m *CancelDSRRequest) GetApiVersion() string {
	if m != nil {
		return m.ApiVersion
	}
	return ""
}

func (m *CancelDSRRequest) GetSubjectRequestId() string {
	if m != nil {
		return m.SubjectRequestId
	}
	return ""
}

type CancelDSRResponse struct {
	ApiVersion           string   `protobuf:"bytes,1,opt,name=api_version,json=apiVersion" json:"api_version,omitempty"`
	ControllerId         string   `protobuf:"bytes,2,opt,name=controller_id,json=controllerId" json:"controller_id,omitempty"`
	ReceivedTime         string   `protobuf:"bytes,3,opt,name=received_time,json=receivedTime" json:"received_time,omitempty"`
	SubjectRequestId     string   `protobuf:"bytes,4,opt,name=subject_request_id,json=subjectRequestId" json:"subject_request_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CancelDSRResponse) Reset()         { *m = CancelDSRResponse{} }
func (m *CancelDSRResponse) String() string { return proto.CompactTextString(m) }
func (*CancelDSRResponse) ProtoMessage()    {}
func (*CancelDSRResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_opendsr_d32d6a998d4a7b8f, []int{8}
}
func (m *CancelDSRResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CancelDSRResponse.Unmarshal(m, b)
}
func (m *CancelDSRResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CancelDSRResponse.Marshal(b, m, deterministic)
}
func (dst *CancelDSRResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelDSRResponse.Merge(dst, src)
}
func (m *CancelDSRResponse) XXX_Size() int {
	return xxx_messageInfo_CancelDSRResponse.Size(m)
}
func (m *CancelDSRResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelDSRResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CancelDSRResponse proto.InternalMessageInfo

func (m *CancelDSRResponse) GetApiVersion() string {
	if m != nil {
		return m.ApiVersion
	}
	return ""
}

func (m *CancelDSRResponse) GetControllerId() string {
	if m != nil {
		return m.ControllerId
	}
	return ""
}

func (m *CancelDSRResponse) GetReceivedTime() string {
	if m != nil {
		return m.ReceivedTime
	}
	return ""
}

func (m *CancelDSRResponse) GetSubjectRequestId() string {
	if m != nil {
		return m.SubjectRequestId
	}
	return ""
}

type CallbackRequest struct {
	ApiVersion             string   `protobuf:"bytes,1,opt,name=api_version,json=apiVersion" json:"api_version,omitempty"`
	ControllerId           string   `protobuf:"bytes,2,opt,name=controller_id,json=controllerId" json:"controller_id,omitempty"`
	ExpectedCompletionTime string   `protobuf:"bytes,3,opt,name=expected_completion_time,json=expectedCompletionTime" json:"expected_completion_time,omitempty"`
	StatusCallbackUrls     []string `protobuf:"bytes,4,rep,name=status_callback_urls,json=statusCallbackUrls" json:"status_callback_urls,omitempty"`
	SubjectRequestId       string   `protobuf:"bytes,5,opt,name=subject_request_id,json=subjectRequestId" json:"subject_request_id,omitempty"`
	RequestStatus          string   `protobuf:"bytes,6,opt,name=request_status,json=requestStatus" json:"request_status,omitempty"`
	ResultsUrl             string   `protobuf:"bytes,7,opt,name=results_url,json=resultsUrl" json:"results_url,omitempty"`
	ResultsCount           string   `protobuf:"bytes,8,opt,name=results_count,json=resultsCount" json:"results_count,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *CallbackRequest) Reset()         { *m = CallbackRequest{} }
func (m *CallbackRequest) String() string { return proto.CompactTextString(m) }
func (*CallbackRequest) ProtoMessage()    {}
func (*CallbackRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_opendsr_d32d6a998d4a7b8f, []int{9}
}
func (m *CallbackRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CallbackRequest.Unmarshal(m, b)
}
func (m *CallbackRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CallbackRequest.Marshal(b, m, deterministic)
}
func (dst *CallbackRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CallbackRequest.Merge(dst, src)
}
func (m *CallbackRequest) XXX_Size() int {
	return xxx_messageInfo_CallbackRequest.Size(m)
}
func (m *CallbackRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CallbackRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CallbackRequest proto.InternalMessageInfo

func (m *CallbackRequest) GetApiVersion() string {
	if m != nil {
		return m.ApiVersion
	}
	return ""
}

func (m *CallbackRequest) GetControllerId() string {
	if m != nil {
		return m.ControllerId
	}
	return ""
}

func (m *CallbackRequest) GetExpectedCompletionTime() string {
	if m != nil {
		return m.ExpectedCompletionTime
	}
	return ""
}

func (m *CallbackRequest) GetStatusCallbackUrls() []string {
	if m != nil {
		return m.StatusCallbackUrls
	}
	return nil
}

func (m *CallbackRequest) GetSubjectRequestId() string {
	if m != nil {
		return m.SubjectRequestId
	}
	return ""
}

func (m *CallbackRequest) GetRequestStatus() string {
	if m != nil {
		return m.RequestStatus
	}
	return ""
}

func (m *CallbackRequest) GetResultsUrl() string {
	if m != nil {
		return m.ResultsUrl
	}
	return ""
}

func (m *CallbackRequest) GetResultsCount() string {
	if m != nil {
		return m.ResultsCount
	}
	return ""
}

type CallbackResponse struct {
	Msg                  string   `protobuf:"bytes,1,opt,name=msg" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CallbackResponse) Reset()         { *m = CallbackResponse{} }
func (m *CallbackResponse) String() string { return proto.CompactTextString(m) }
func (*CallbackResponse) ProtoMessage()    {}
func (*CallbackResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_opendsr_d32d6a998d4a7b8f, []int{10}
}
func (m *CallbackResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CallbackResponse.Unmarshal(m, b)
}
func (m *CallbackResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CallbackResponse.Marshal(b, m, deterministic)
}
func (dst *CallbackResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CallbackResponse.Merge(dst, src)
}
func (m *CallbackResponse) XXX_Size() int {
	return xxx_messageInfo_CallbackResponse.Size(m)
}
func (m *CallbackResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CallbackResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CallbackResponse proto.InternalMessageInfo

func (m *CallbackResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func init() {
	proto.RegisterType((*Identity)(nil), "dsrhub.opendsr.Identity")
	proto.RegisterType((*GetDiscoveryRequest)(nil), "dsrhub.opendsr.GetDiscoveryRequest")
	proto.RegisterType((*GetDiscoveryResponse)(nil), "dsrhub.opendsr.GetDiscoveryResponse")
	proto.RegisterType((*CreateDSRRequest)(nil), "dsrhub.opendsr.CreateDSRRequest")
	proto.RegisterType((*CreateDSRResponse)(nil), "dsrhub.opendsr.CreateDSRResponse")
	proto.RegisterType((*GetDSRRequest)(nil), "dsrhub.opendsr.GetDSRRequest")
	proto.RegisterType((*GetDSRResponse)(nil), "dsrhub.opendsr.GetDSRResponse")
	proto.RegisterType((*CancelDSRRequest)(nil), "dsrhub.opendsr.CancelDSRRequest")
	proto.RegisterType((*CancelDSRResponse)(nil), "dsrhub.opendsr.CancelDSRResponse")
	proto.RegisterType((*CallbackRequest)(nil), "dsrhub.opendsr.CallbackRequest")
	proto.RegisterType((*CallbackResponse)(nil), "dsrhub.opendsr.CallbackResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// OpenDSRServiceClient is the client API for OpenDSRService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OpenDSRServiceClient interface {
	GetDiscovery(ctx context.Context, in *GetDiscoveryRequest, opts ...grpc.CallOption) (*GetDiscoveryResponse, error)
	CreateDSR(ctx context.Context, in *CreateDSRRequest, opts ...grpc.CallOption) (*CreateDSRResponse, error)
	GetDSR(ctx context.Context, in *GetDSRRequest, opts ...grpc.CallOption) (*GetDSRResponse, error)
	CancelDSR(ctx context.Context, in *CancelDSRRequest, opts ...grpc.CallOption) (*CancelDSRResponse, error)
	Callback(ctx context.Context, in *CallbackRequest, opts ...grpc.CallOption) (*CallbackResponse, error)
}

type openDSRServiceClient struct {
	cc *grpc.ClientConn
}

func NewOpenDSRServiceClient(cc *grpc.ClientConn) OpenDSRServiceClient {
	return &openDSRServiceClient{cc}
}

func (c *openDSRServiceClient) GetDiscovery(ctx context.Context, in *GetDiscoveryRequest, opts ...grpc.CallOption) (*GetDiscoveryResponse, error) {
	out := new(GetDiscoveryResponse)
	err := c.cc.Invoke(ctx, "/dsrhub.opendsr.OpenDSRService/GetDiscovery", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openDSRServiceClient) CreateDSR(ctx context.Context, in *CreateDSRRequest, opts ...grpc.CallOption) (*CreateDSRResponse, error) {
	out := new(CreateDSRResponse)
	err := c.cc.Invoke(ctx, "/dsrhub.opendsr.OpenDSRService/CreateDSR", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openDSRServiceClient) GetDSR(ctx context.Context, in *GetDSRRequest, opts ...grpc.CallOption) (*GetDSRResponse, error) {
	out := new(GetDSRResponse)
	err := c.cc.Invoke(ctx, "/dsrhub.opendsr.OpenDSRService/GetDSR", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openDSRServiceClient) CancelDSR(ctx context.Context, in *CancelDSRRequest, opts ...grpc.CallOption) (*CancelDSRResponse, error) {
	out := new(CancelDSRResponse)
	err := c.cc.Invoke(ctx, "/dsrhub.opendsr.OpenDSRService/CancelDSR", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openDSRServiceClient) Callback(ctx context.Context, in *CallbackRequest, opts ...grpc.CallOption) (*CallbackResponse, error) {
	out := new(CallbackResponse)
	err := c.cc.Invoke(ctx, "/dsrhub.opendsr.OpenDSRService/Callback", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OpenDSRServiceServer is the server API for OpenDSRService service.
type OpenDSRServiceServer interface {
	GetDiscovery(context.Context, *GetDiscoveryRequest) (*GetDiscoveryResponse, error)
	CreateDSR(context.Context, *CreateDSRRequest) (*CreateDSRResponse, error)
	GetDSR(context.Context, *GetDSRRequest) (*GetDSRResponse, error)
	CancelDSR(context.Context, *CancelDSRRequest) (*CancelDSRResponse, error)
	Callback(context.Context, *CallbackRequest) (*CallbackResponse, error)
}

func RegisterOpenDSRServiceServer(s *grpc.Server, srv OpenDSRServiceServer) {
	s.RegisterService(&_OpenDSRService_serviceDesc, srv)
}

func _OpenDSRService_GetDiscovery_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDiscoveryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenDSRServiceServer).GetDiscovery(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dsrhub.opendsr.OpenDSRService/GetDiscovery",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenDSRServiceServer).GetDiscovery(ctx, req.(*GetDiscoveryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenDSRService_CreateDSR_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateDSRRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenDSRServiceServer).CreateDSR(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dsrhub.opendsr.OpenDSRService/CreateDSR",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenDSRServiceServer).CreateDSR(ctx, req.(*CreateDSRRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenDSRService_GetDSR_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDSRRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenDSRServiceServer).GetDSR(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dsrhub.opendsr.OpenDSRService/GetDSR",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenDSRServiceServer).GetDSR(ctx, req.(*GetDSRRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenDSRService_CancelDSR_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CancelDSRRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenDSRServiceServer).CancelDSR(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dsrhub.opendsr.OpenDSRService/CancelDSR",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenDSRServiceServer).CancelDSR(ctx, req.(*CancelDSRRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenDSRService_Callback_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CallbackRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenDSRServiceServer).Callback(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dsrhub.opendsr.OpenDSRService/Callback",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenDSRServiceServer).Callback(ctx, req.(*CallbackRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _OpenDSRService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dsrhub.opendsr.OpenDSRService",
	HandlerType: (*OpenDSRServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetDiscovery",
			Handler:    _OpenDSRService_GetDiscovery_Handler,
		},
		{
			MethodName: "CreateDSR",
			Handler:    _OpenDSRService_CreateDSR_Handler,
		},
		{
			MethodName: "GetDSR",
			Handler:    _OpenDSRService_GetDSR_Handler,
		},
		{
			MethodName: "CancelDSR",
			Handler:    _OpenDSRService_CancelDSR_Handler,
		},
		{
			MethodName: "Callback",
			Handler:    _OpenDSRService_Callback_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "opendsr/opendsr.proto",
}

func init() { proto.RegisterFile("opendsr/opendsr.proto", fileDescriptor_opendsr_d32d6a998d4a7b8f) }

var fileDescriptor_opendsr_d32d6a998d4a7b8f = []byte{
	// 763 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x56, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0x56, 0x92, 0x36, 0x6d, 0xa7, 0x49, 0x9a, 0x6e, 0x5b, 0x64, 0x55, 0xd0, 0x06, 0xa7, 0x55,
	0x7b, 0x80, 0x14, 0x95, 0x0b, 0x67, 0x52, 0xa8, 0x22, 0x84, 0x40, 0x49, 0x5b, 0x09, 0x0e, 0x44,
	0x8e, 0x3d, 0x14, 0x83, 0x63, 0x9b, 0xdd, 0x75, 0x44, 0x4e, 0x3c, 0x02, 0x8f, 0xc1, 0x01, 0xde,
	0x84, 0x33, 0x57, 0x9e, 0x05, 0xad, 0x77, 0xd7, 0xf9, 0xb3, 0xdb, 0x54, 0xa2, 0x12, 0x27, 0x3b,
	0xdf, 0x7c, 0x3b, 0x3b, 0xf3, 0xcd, 0xb7, 0xeb, 0xc0, 0x56, 0x10, 0xa2, 0xef, 0x30, 0x7a, 0xa4,
	0x9e, 0x8d, 0x90, 0x06, 0x3c, 0x20, 0x15, 0x87, 0xd1, 0x0f, 0x51, 0xaf, 0xa1, 0x50, 0xf3, 0x2b,
	0x2c, 0xb7, 0x1c, 0xf4, 0xb9, 0xcb, 0x87, 0xa4, 0x0e, 0x65, 0x57, 0xbd, 0x77, 0xf9, 0x30, 0x44,
	0x23, 0x57, 0xcb, 0x1d, 0xae, 0xb4, 0x4b, 0x1a, 0x3c, 0x1b, 0x86, 0x48, 0x0e, 0x60, 0x2d, 0x21,
	0xbd, 0x0f, 0x68, 0xdf, 0xe2, 0x46, 0x3e, 0xa6, 0x55, 0x34, 0xfc, 0x3c, 0x46, 0xc9, 0x3e, 0x24,
	0x48, 0x77, 0x60, 0x79, 0x11, 0x1a, 0x85, 0x98, 0x97, 0xec, 0x71, 0x21, 0x40, 0x73, 0x0b, 0x36,
	0x4e, 0x91, 0x9f, 0xb8, 0xcc, 0x0e, 0x06, 0x48, 0x87, 0x6d, 0xfc, 0x1c, 0x21, 0xe3, 0xe6, 0xaf,
	0x1c, 0x6c, 0x4e, 0xe2, 0x2c, 0x0c, 0x7c, 0x86, 0x64, 0x17, 0x56, 0xad, 0xd0, 0xed, 0x0e, 0x90,
	0x32, 0x37, 0xf0, 0x55, 0x89, 0x60, 0x85, 0xee, 0x85, 0x44, 0xc8, 0x0b, 0xd8, 0x64, 0x51, 0x18,
	0x06, 0x94, 0xa3, 0xd3, 0x55, 0x7b, 0xb9, 0xc8, 0x8c, 0x7c, 0xad, 0x70, 0xb8, 0x7a, 0x6c, 0x34,
	0x26, 0x05, 0x68, 0xe8, 0xee, 0xdb, 0x1b, 0xc9, 0xaa, 0x56, 0xb2, 0x88, 0x3c, 0x83, 0xdd, 0x51,
	0x32, 0x16, 0xf5, 0x3e, 0xa2, 0xcd, 0xbb, 0x54, 0xd6, 0x18, 0x6b, 0xc4, 0x54, 0x57, 0x77, 0x13,
	0x5a, 0x47, 0xb2, 0x54, 0x23, 0x42, 0x33, 0x66, 0xfe, 0xce, 0x43, 0xb5, 0x49, 0xd1, 0xe2, 0x78,
	0xd2, 0x69, 0xab, 0xc8, 0xf5, 0x9d, 0xec, 0x00, 0x50, 0xbc, 0x8c, 0x3c, 0x8b, 0x8b, 0xb8, 0x54,
	0x79, 0x0c, 0x21, 0x0f, 0x80, 0x4c, 0x97, 0xe4, 0x3a, 0xaa, 0x9e, 0x2a, 0x9b, 0x28, 0xa3, 0xe5,
	0x90, 0x47, 0x42, 0x97, 0xd9, 0x06, 0x8c, 0x85, 0x98, 0x4f, 0xd8, 0x4c, 0xd9, 0x62, 0x82, 0x2c,
	0xea, 0xf5, 0x5d, 0x2e, 0x9a, 0xe7, 0x6e, 0x1f, 0x8d, 0x45, 0x39, 0xc1, 0x04, 0x3d, 0x73, 0xfb,
	0x48, 0x4e, 0x47, 0x65, 0x8c, 0xc9, 0x5d, 0xbc, 0x46, 0xee, 0x75, 0xb5, 0x66, 0x4c, 0x6c, 0x51,
	0x21, 0xb7, 0x78, 0xc4, 0xba, 0xb6, 0xe5, 0x79, 0x3d, 0xcb, 0xfe, 0xd4, 0x8d, 0xa8, 0xc7, 0x8c,
	0xa5, 0x5a, 0x21, 0xae, 0x30, 0x8e, 0x35, 0x55, 0xe8, 0x9c, 0x7a, 0xcc, 0xfc, 0x96, 0x87, 0xf5,
	0x31, 0x5d, 0xe7, 0xb5, 0x48, 0x1d, 0xca, 0x76, 0xe0, 0x73, 0x1a, 0x78, 0x1e, 0x52, 0xa1, 0x99,
	0xd4, 0xb6, 0x34, 0x02, 0x5b, 0x0e, 0x79, 0x02, 0x06, 0x7e, 0x09, 0xd1, 0x16, 0xcd, 0xdb, 0x41,
	0x3f, 0xf4, 0x50, 0x88, 0x2e, 0x75, 0x90, 0x1a, 0xdf, 0xd1, 0xf1, 0x66, 0x12, 0x8e, 0x05, 0xa9,
	0x43, 0x99, 0xa2, 0x8d, 0xee, 0x40, 0xcb, 0x26, 0x25, 0x2e, 0x69, 0x30, 0x26, 0x1d, 0xc0, 0x1a,
	0xfa, 0x76, 0xe0, 0xa0, 0xa3, 0xc7, 0xa1, 0xd4, 0xad, 0x28, 0x58, 0xdb, 0x24, 0x7d, 0xca, 0xc5,
	0xf4, 0x29, 0x9b, 0xef, 0xa0, 0x2c, 0x8e, 0xcd, 0x0d, 0x5c, 0x96, 0x9e, 0x3f, 0x9f, 0x91, 0xff,
	0x47, 0x1e, 0x2a, 0x7a, 0x83, 0xff, 0x44, 0xee, 0xf4, 0x06, 0x16, 0x32, 0x8e, 0xc1, 0x3e, 0x54,
	0x34, 0x4b, 0x1a, 0x4a, 0x9b, 0x5a, 0xa1, 0x9d, 0x18, 0x14, 0x4d, 0x51, 0x64, 0x91, 0xc7, 0x99,
	0xf0, 0xa0, 0x92, 0x1b, 0x14, 0x74, 0x4e, 0x3d, 0x39, 0x64, 0x49, 0xb0, 0x83, 0xc8, 0xe7, 0xc6,
	0x92, 0x1e, 0x72, 0x0c, 0x36, 0x05, 0x66, 0x5a, 0x50, 0x6d, 0x5a, 0xbe, 0x8d, 0xde, 0xed, 0x0d,
	0xe4, 0x67, 0x0e, 0xd6, 0xc7, 0xf6, 0xf8, 0xa7, 0x33, 0x99, 0x31, 0x72, 0x21, 0xc5, 0xc8, 0x37,
	0x92, 0xdf, 0xfc, 0x93, 0x87, 0x35, 0x7d, 0x84, 0xe7, 0x56, 0xe4, 0x96, 0x0d, 0x94, 0x75, 0xef,
	0x2c, 0x64, 0xdd, 0x3b, 0x19, 0x3d, 0x2f, 0xce, 0x6d, 0xb9, 0xe2, 0x1c, 0x96, 0x5b, 0xba, 0xde,
	0x72, 0xcb, 0x29, 0x96, 0xdb, 0x13, 0x96, 0xd3, 0xfa, 0x2a, 0x37, 0x54, 0xa1, 0xd0, 0x67, 0x97,
	0x4a, 0x58, 0xf1, 0x7a, 0xfc, 0xbd, 0x00, 0x95, 0x57, 0x21, 0xfa, 0x27, 0x9d, 0x76, 0x07, 0xe9,
	0xc0, 0xb5, 0x91, 0xbc, 0x81, 0xd2, 0xf8, 0x07, 0x97, 0xd4, 0xa7, 0xaf, 0xee, 0x94, 0xcf, 0xf4,
	0xf6, 0xde, 0xd5, 0x24, 0xb5, 0xff, 0x6b, 0x58, 0x49, 0x6e, 0x69, 0x52, 0x9b, 0x5e, 0x32, 0xfd,
	0x61, 0xdc, 0xbe, 0x7f, 0x05, 0x43, 0x65, 0x3c, 0x85, 0xa2, 0xbc, 0x85, 0xc8, 0xbd, 0xb4, 0x0a,
	0x46, 0xb9, 0x76, 0xb2, 0xc2, 0x63, 0xa5, 0xe9, 0xd3, 0x93, 0x52, 0xda, 0xd4, 0xe1, 0x4d, 0x29,
	0x6d, 0xe6, 0xe8, 0xbd, 0x84, 0x65, 0x3d, 0x00, 0xb2, 0x3b, 0x4b, 0x9f, 0xb0, 0xfe, 0x76, 0x2d,
	0x9b, 0x20, 0xd3, 0x3d, 0x3d, 0x7a, 0xfb, 0xf0, 0xd2, 0xe5, 0x82, 0x62, 0x07, 0xfd, 0x23, 0xc9,
	0xd6, 0x8f, 0xf8, 0x2f, 0x9d, 0xfe, 0xa1, 0x32, 0xf4, 0x8a, 0x31, 0xfa, 0xf8, 0x6f, 0x00, 0x00,
	0x00, 0xff, 0xff, 0xd3, 0x56, 0x94, 0x0b, 0x01, 0x0a, 0x00, 0x00,
}
