syntax = "proto3";

import "google/api/annotations.proto";

package idl.dsrhub;
option go_package = "github.com/dsrhub/dsrhub/idl_dsrhub";

message CreateDSRRequest {
  string regulation           = 1; /// e.g. "gdpr", "ccpa"
  string status_callback_url  = 2; /// status callback url for async webhook callback pattern.
  string subject_request_id   = 3; /// UUID v4 string. This MUST be generated by the Controller at the time of request submission to a Processor.
  string subject_request_type = 4; /// e.g. "portability", "erasure"
  string identity_type        = 5; /// e.g. "email", "controller_customer_id", "android_id"
  string identity_format      = 6; /// e.g. "md5", "raw", "sha1", "sha256"
  string identity_value       = 7; /// e.g. "zzzz@example.com", if multiple, one can use a separator like ','
}

message CreateDSRResponse {
  string regulation           = 1; /// e.g. "gdpr", "ccpa"
  string request_status       = 2; /// e.g. "pending", "in_progress", "completed", "cancelled"
  string subject_request_id   = 3; /// UUID v4 string. This MUST be generated by the Controller at the time of request submission to a Processor.
  string subject_request_type = 4; /// e.g. "portability", "erasure"
  string identity_type        = 5; /// e.g. "email", "controller_customer_id", "android_id"
  string identity_format      = 6; /// e.g. "md5", "raw", "sha1", "sha256"
  string identity_value       = 7; /// e.g. "zzzz@example.com", if multiple, one can use a separator like ','
  string controller_id        = 8; /// string indicating the unique identity of the Controller in the Processorâ€™s system.
}

message ExchangeIdentityRequest {
  string identity_type   = 1; /// e.g. "email", "controller_customer_id", "android_id"
  string identity_format = 2; /// e.g. "md5", "raw", "sha1", "sha256"
  string identity_value  = 3; /// e.g. "zzzz@example.com", if multiple, one can use a separator like ','
}

message ExchangeIdentityResponse {
  string identity_type   = 1; /// e.g. "email", "controller_customer_id", "android_id"
  string identity_format = 2; /// e.g. "md5", "raw", "sha1", "sha256"
  string identity_value  = 3; /// e.g. "zzzz@example.com", if multiple, one can use a separator like ','
}

service DSRHubService {
  rpc CreateDSR(CreateDSRRequest) returns (CreateDSRResponse) {
    option (google.api.http) = {
      post: "/dsrhub/create_dsr_request"
      body: "*"
    };
  };
  rpc ExchangeIdentity(ExchangeIdentityRequest) returns (ExchangeIdentityResponse) {
    option (google.api.http) = {
      post: "/dsrhub/exchange_identity"
      body: "*"
    };
  };
}
